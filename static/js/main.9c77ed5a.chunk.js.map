{"version":3,"sources":["getWeb3.js","Containers/HomePage/Cover/Components/NavigationBar.js","Containers/HomePage/Cover/Components/SearchField.js","Containers/HomePage/Cover/Components/Title.js","Containers/HomePage/Cover/Components/Header.js","Containers/HomePage/Cover/Cover.js","Containers/HomePage/AssetList/AssetList.js","Containers/HomePage/obj.js","Containers/HomePage/HomePage.js","Containers/Auction/Cover/Components/NavigationBar.js","Containers/Auction/Cover/Components/SearchField.js","Containers/Auction/Cover/Components/Title.js","Containers/Auction/Cover/Components/Header.js","Containers/Auction/Cover/Cover.js","Containers/Auction/obj.js","Containers/Auction/AuctionResult/AuctionResult.js","Containers/Auction/Auction.js","Containers/AuctionStatus/obj.js","Containers/AuctionStatus/Cover/Components/NavigationBar.js","Containers/AuctionStatus/Cover/Components/SearchField.js","Containers/AuctionStatus/Cover/Components/Title.js","Containers/AuctionStatus/Cover/Components/Header.js","Containers/AuctionStatus/Cover/Cover.js","Containers/AuctionStatus/Portal/Portal.js","Containers/AuctionStatus/AuctionStatus.js","Containers/BiSell/Cover/Components/NavigationBar.js","Containers/BiSell/Cover/Components/SearchField.js","Containers/BiSell/Cover/Components/Title.js","Containers/BiSell/Cover/Components/Header.js","Containers/BiSell/Cover/Cover.js","Containers/BiSell/obj.js","Containers/BiSell/Portal/Portal.js","Containers/BiSell/BiSell.js","App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","NavigationBar","routeChange","className","title","onClick","SearchField","handleChange","type","name","placeholder","onChange","Title","href","Header","Cover","AssetList","props","filterData","npa","result","state","queryAuctionId","filter","each","_auctionID","toString","includes","queryOwner","_bankName","queryCity","_city","queryDate","_date","Date","_timestamp","toTimestamp","getFullYear","getMonth","getDate","_timeStamp","queryReservePrice","_reservePrice","queryEMD","_EMD","queryBidMultiplier","_bidMultipliers","queryEventType","_eventType","showRows","_npa","map","_assetOnAuction","key","toDateString","toggleFilter","setState","isQuerying","handleInputChange","evt","target","value","checked","year","month","day","UTC","getTime","this","Table","striped","bordered","hover","Component","obj","particles","number","density","value_area","color","shape","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","HomePage","onSearchChange","params","AuctionResult","startAuction","viewAuction","auctions","sellAsset","rows","address","flag","auctionAddress","some","i","status","auction","Auction","Portal","componentDidMount","loggedInAccount","auctionInterface","options","getAssetDetails","getStatus","startBidding","getMybid","listenToStart","listenToBid","listenToBidWithdraw","listenToSetOwner","listenToOwnerChange","listenToAuctionCancel","listenToAuctionEnd","isLoaded","getHighestBid","owneraddress","assetAddress","methods","getMyBid","call","response","myBid","ping","sendBid","bid","send","from","utils","toWei","bidAmount","err","res","then","tx","to","data","encodeABI","eth","sendTransaction","logs","e","Object","values","highestBidder","highestBid","fromWei","auctionStarted","on","bidLog","HighBidAlert","length","forEach","returnValues","_bid","bidder","_bidder","owner","getAssetOnAuction","ownerCancelAuction","cancelAuction","ownerEndAuction","endAuction","ownerStopAuction","toggleStopAuction","alert","bidderWithdrawBid","withdrawBid","bidWithdrawn","setOwner","newOwner","_new","auctionCanceled","auctionEnded","isActive","toLowerCase","AuctionStatus","assetInterface","getAllInitialData","listenToEvents","getCurrentOwner","currentOwner","getContractBalance","getBalance","contractBalance","getNpaDetails","getNPADetails","_NPA_ID","assetDetails","getNewOwner","setNewOwner","input","transferOwnership","newOwnerAssigned","_newOwner","OwnershipTransferred","previousOwner","BiSell","App","handleRevert","getAccounts","accounts","net","getId","networkId","Contract","AssetInterfaceContract","abi","networks","AuctionContract","auctionManager","AuctionManagerContract","fetchAuctionManagerAddress","fetchAddress","feed","auctionStatus","AuctionInstance","error","fetch","json","contracts","element","array","feedDataToState","Data","_address","method","headers","body","JSON","stringify","openAuction","changeRoute","auctionManagerAddress","deploy","bytecode","arguments","gas","gasPrice","auctionInstance","contract","getAuctionStatus","index","openSale","_route","route","filterNpa","searchField","connect","dispatch","event","payload","Boolean","location","hostname","match","initialSearchState","rootStore","createStore","action","assign","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9c77ed5a.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from 'react';\r\n\r\nconst NavigationBar = ({routeChange}) => (\r\n    <nav className=\"pa3 pa4-ns\">\r\n        <div className=\"tc bg-white shadow-5 br-pill\">\r\n            <h5 className={\"link dim gray f6 f5-ns dib mr3 no-underline pointer\"} title={\"Home\"} onClick={()=>routeChange(\"auction\")}>Auction</h5>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default NavigationBar","import React from \"react\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nconst SearchField = ({handleChange, routeChange}) => (\r\n    <div className={\"pb3\"}>\r\n        <NavigationBar className={''} routeChange={routeChange}/>\r\n        <input className={\"search br-pill shadow-5\"} type={\"search\"} name={'searchField'} placeholder={\"Search NPA\"} onChange={handleChange}/>\r\n    </div>\r\n);\r\n\r\nexport default SearchField;","import React from 'react';\r\n\r\nconst Title = ({name}) => (\r\n    <header className=\"tc ph4\">\r\n        <a className=\"link dim black b f1 f-headline-ns tc db mb1 mb4-ns no-underline\" href={\"#\"} title={\"Home\"}>\r\n            {name}\r\n        </a>\r\n    </header>\r\n);\r\n\r\nexport default Title;","import React from 'react';\r\nimport Title from \"./Title\";\r\n\r\nconst Header = ({name}) => (\r\n    <div className={\"header\"}>\r\n        <Title name={name}/>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\nimport SearchField from \"./Components/SearchField\";\nimport Header from \"./Components/Header\";\n\nconst Cover = ({handleChange,name,routeChange}) =>{\n\n    return (\n        <div>\n            <Header name={name}/>\n            <SearchField  handleChange={handleChange} routeChange={routeChange}/>\n        </div>\n    )\n}\n\nexport default Cover;","import React, {Component} from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\n//Accepts array of NPA Structure\nclass AssetList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            isQuerying: false,\n            queryAuctionId:'',\n            queryOwner:'',\n            queryCity:'',\n            queryDate:'',\n            queryReservePrice:'',\n            queryEMD:'',\n            queryBidMultiplier:'',\n            queryEventType:'',\n        }\n    }\n\n    filterData = (npa) => {\n        let result = npa;\n        if (this.state.queryAuctionId !== '') {\n            result = result.filter(each => {\n                return each._auctionID.toString().includes(this.state.queryAuctionId);\n            })\n        }\n        if (this.state.queryOwner !== '') {\n            result = result.filter(each => {\n                return each._bankName.includes(this.state.queryOwner);\n            })\n        }\n        if (this.state.queryCity !== '') {\n            result = result.filter(each => {\n                return each._city.includes(this.state.queryCity);\n            })\n        }\n        if (this.state.queryDate !== '') {\n            const _date = new Date(this.state.queryDate);\n            const _timestamp = this.toTimestamp(_date.getFullYear(), _date.getMonth(), _date.getDate());\n            result = result.filter(each => {\n                return each._timeStamp.toString() === _timestamp.toString();\n            })\n        }\n        if (this.state.queryReservePrice !== '') {\n            result = result.filter(each => {\n                return each._reservePrice === this.state.queryReservePrice;\n            })\n        }\n        if (this.state.queryEMD !== '') {\n            result = result.filter(each => {\n                return each._EMD === this.state.queryEMD;\n            })\n        }\n        if (this.state.queryBidMultiplier !== '') {\n            result = result.filter(each => {\n                return each._bidMultipliers === this.state.queryBidMultiplier;\n            })\n        }\n        if (this.state.queryEventType !== ''){\n            result = result.filter(each => {\n                return each._eventType === (this.state.queryEventType);\n            })\n        }\n        console.log(result);\n        return result;\n    }\n\n    showRows=(_npa)=> {\n        return _npa.map(({_auctionID, _bankName, _assetOnAuction, _city, _timeStamp, _reservePrice, _EMD, _bidMultipliers, _eventType}) => {\n            const _date = new Date(_timeStamp * 1000);\n            return (<tr key={_auctionID}>\n                <td>{_auctionID}</td>\n                <td>{_bankName}</td>\n                <td>{_assetOnAuction}</td>\n                <td>{_city}</td>\n                <td>{_date.toDateString()}</td>\n                <td>{_reservePrice}</td>\n                <td>{_EMD}</td>\n                <td>{_bidMultipliers}</td>\n                <td>{_eventType}</td>\n            </tr>)\n        });\n    }\n\n    toggleFilter = () =>{\n        this.setState({isQuerying: !this.state.isQuerying});\n    }\n\n    handleInputChange = (evt) =>{\n        const target = evt.target;\n        const value = target.type==='checkbox'?target.checked:target.value;\n        const name = target.name;\n        this.setState({\n            [name]:value,\n        })\n        console.log(\"inside handleInputChange\",this.state);\n    }\n\n    toTimestamp = (year,month,day) => {\n        const datum = new Date(Date.UTC(year,month,day));\n        return datum.getTime()/1000;\n    }\n\n    render() {\n        const _npa=this.filterData(this.props.npa);\n        return (\n            <div className={'w-80 bg-white shadow-5 br-m mt-3'}>\n                {this.state.isQuerying?<div>\n                    Auction Id:-<input onChange={this.handleInputChange} name={\"queryAuctionId\"}/>\n                    Owner Entity:-<input onChange={this.handleInputChange} name={\"queryOwner\"}/>\n                    City:-<input onChange={this.handleInputChange} name={\"queryCity\"}/>\n                    Date:-<input type={\"date\"} onChange={this.handleInputChange} name={\"queryDate\"}/>\n                    Reserve Price:-<input onChange={this.handleInputChange} name={\"queryReservePrice\"}/>\n                    EMD:-<input onChange={this.handleInputChange} name={\"queryEMD\"}/>\n                    Bid Multiplier:-<input onChange={this.handleInputChange} name={\"queryBidMultiplier\"}/>\n                    Event Type:-<input onChange={this.handleInputChange} name={\"queryEventType\"}/>\n                    <button onClick={this.toggleFilter}>Toggle Filter</button>\n                </div>:<button onClick={this.toggleFilter}>Toggle Filter</button>}\n                <Table striped bordered hover>\n                    <thead>\n                    <tr>\n                        <th>Auction ID</th>\n                        <th>Owner Entity</th>\n                        <th>Asset On Auction</th>\n                        <th>City</th>\n                        <th>Date</th>\n                        <th>Reserve Price</th>\n                        <th>EMD</th>\n                        <th>Bid Multiplier</th>\n                        <th>Event Type</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.showRows(_npa)}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default AssetList;","\r\nconst obj =\r\n    {\r\n        particles: {\r\n            number: {\r\n                value: 128,\r\n                density: {\r\n                    enable: true,\r\n                    value_area: 1000\r\n                }\r\n            },\r\n            color: {\r\n                value: \"#ffffff\"\r\n            },\r\n            shape: {\r\n                type: \"circle\",\r\n                stroke: {\r\n                    width: 0,\r\n                    color: \"#000000\"\r\n                },\r\n                polygon: {\r\n                    nb_sides: 3\r\n                },\r\n                image: {\r\n                    src: \"img/github.svg\",\r\n                    width: 100,\r\n                    height: 100\r\n                }\r\n            },\r\n            opacity: {\r\n                value: 1,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 1,\r\n                    opacity_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            line_linked: {\r\n                enable: true,\r\n                distance: 150,\r\n                color: \"#ffffff\",\r\n                opacity: 0.4,\r\n                width: 1\r\n            },\r\n            move: {\r\n                enable: true,\r\n                speed: 2,\r\n                direction: \"none\",\r\n                random: true,\r\n                straight: false,\r\n                out_mode: \"out\",\r\n                bounce: false,\r\n                attract: {\r\n                    enable: false,\r\n                    rotateX: 600,\r\n                    rotateY: 1200\r\n                }\r\n            }\r\n        },\r\n        interactivity: {\r\n            detect_on: \"canvas\",\r\n            events: {\r\n                onhover: {\r\n                    enable: false,\r\n                    mode: \"bubble\"\r\n                },\r\n                onclick: {\r\n                    enable: true,\r\n                    mode: \"repulse\"\r\n                },\r\n                resize: true\r\n            },\r\n            modes: {\r\n                grab: {\r\n                    distance: 400,\r\n                    line_linked: {\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                bubble: {\r\n                    distance: 100,\r\n                    size: 20,\r\n                    duration: 2,\r\n                    opacity: 8,\r\n                    speed: 3\r\n                },\r\n                repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4\r\n                },\r\n                push: {\r\n                    particles_nb: 4\r\n                },\r\n                remove: {\r\n                    particles_nb: 2\r\n                }\r\n            }\r\n        },\r\n        retina_detect: true\r\n    };\r\n\r\nexport default obj;","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Cover from \"./Cover/Cover\";\nimport AssetList from \"./AssetList/AssetList\";\nimport obj from './obj';\n\nexport const HomePage = ({filter,onSearchChange,routeChange}) =>(\n    <div className=\"App \">\n        <Particles params={obj} className={\"particlesBg \"}/>\n        <Cover handleChange={onSearchChange} name={\"Asset List\"} routeChange={routeChange}/>\n        <AssetList npa={filter}/>\n    </div>\n)\n","import React from 'react';\r\n\r\nconst NavigationBar = ({routeChange}) => (\r\n    <nav className=\"pa3 pa4-ns\">\r\n        <div className=\"tc bg-white shadow-5 br-pill\">\r\n            <h5 className={\"link dim gray f6 f5-ns dib mr3 no-underline pointer\"} title={\"Home\"} onClick={()=>routeChange(\"homepage\")}>Home Page</h5>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default NavigationBar","import React from \"react\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nconst SearchField = ({handleChange, routeChange}) => (\r\n    <div className={\"pb3\"}>\r\n        <NavigationBar className={''} routeChange={routeChange}/>\r\n        <input className={\"search br-pill shadow-5\"} type={\"search\"} name={'searchField'} placeholder={\"Search NPA\"} onChange={handleChange}/>\r\n    </div>\r\n);\r\n\r\nexport default SearchField;","import React from 'react';\r\n\r\nconst Title = ({name}) => (\r\n    <header className=\"tc ph4\">\r\n        <a className=\"link dim black b f1 f-headline-ns tc db mb1 mb4-ns no-underline\" href={\"#\"} title={\"Home\"}>\r\n            {name}\r\n        </a>\r\n    </header>\r\n);\r\n\r\nexport default Title;","import React from 'react';\r\nimport Title from \"./Title\";\r\n\r\nconst Header = ({name}) => (\r\n    <div className={\"header\"}>\r\n        <Title name={name}/>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\nimport SearchField from \"./Components/SearchField\";\nimport Header from \"./Components/Header\";\n\nconst Cover = ({handleChange,name,routeChange}) =>{\n\n    return (\n        <div>\n            <Header name={name}/>\n            <SearchField  handleChange={handleChange} routeChange={routeChange}/>\n        </div>\n    )\n}\n\nexport default Cover;","\r\nconst obj =\r\n    {\r\n        particles: {\r\n            number: {\r\n                value: 128,\r\n                density: {\r\n                    enable: true,\r\n                    value_area: 1000\r\n                }\r\n            },\r\n            color: {\r\n                value: \"#ffffff\"\r\n            },\r\n            shape: {\r\n                type: \"circle\",\r\n                stroke: {\r\n                    width: 0,\r\n                    color: \"#000000\"\r\n                },\r\n                polygon: {\r\n                    nb_sides: 3\r\n                },\r\n                image: {\r\n                    src: \"img/github.svg\",\r\n                    width: 100,\r\n                    height: 100\r\n                }\r\n            },\r\n            opacity: {\r\n                value: 1,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 1,\r\n                    opacity_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            line_linked: {\r\n                enable: true,\r\n                distance: 150,\r\n                color: \"#ffffff\",\r\n                opacity: 0.4,\r\n                width: 1\r\n            },\r\n            move: {\r\n                enable: true,\r\n                speed: 2,\r\n                direction: \"none\",\r\n                random: true,\r\n                straight: false,\r\n                out_mode: \"out\",\r\n                bounce: false,\r\n                attract: {\r\n                    enable: false,\r\n                    rotateX: 600,\r\n                    rotateY: 1200\r\n                }\r\n            }\r\n        },\r\n        interactivity: {\r\n            detect_on: \"canvas\",\r\n            events: {\r\n                onhover: {\r\n                    enable: false,\r\n                    mode: \"bubble\"\r\n                },\r\n                onclick: {\r\n                    enable: true,\r\n                    mode: \"repulse\"\r\n                },\r\n                resize: true\r\n            },\r\n            modes: {\r\n                grab: {\r\n                    distance: 400,\r\n                    line_linked: {\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                bubble: {\r\n                    distance: 100,\r\n                    size: 20,\r\n                    duration: 2,\r\n                    opacity: 8,\r\n                    speed: 3\r\n                },\r\n                repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4\r\n                },\r\n                push: {\r\n                    particles_nb: 4\r\n                },\r\n                remove: {\r\n                    particles_nb: 2\r\n                }\r\n            }\r\n        },\r\n        retina_detect: true\r\n    };\r\n\r\nexport default obj;","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\n//Accepts array of NPA Structure\nexport const AuctionResult = ({npa,startAuction,viewAuction,auctions, routeChange, sellAsset}) => {\n    const rows = npa.map(({_auctionID,_bankName,_assetOnAuction,_city,_timeStamp,_reservePrice,_EMD,_bidMultipliers,_eventType,address})=>{\n        let flag = false;\n        let auctionAddress = '';\n        auctions.some((each,i)=>{\n            flag = each.status;\n            auctionAddress = each.auction;\n            return address === each.address;\n        })\n        console.log(flag,auctionAddress);\n        const _date= new Date(_timeStamp*1000);\n        return (<tr key={_auctionID}>\n            <td>{_auctionID}</td>\n            <td>{_bankName}</td>\n            <td>{_assetOnAuction}</td>\n            <td>{_city}</td>\n            <td>{_date.toDateString()}</td>\n            <td>{_reservePrice}</td>\n            <td>{_EMD}</td>\n            <td>{_bidMultipliers}</td>\n            <td>{_eventType}</td>\n            <td>{address}</td>\n            {(flag)?\n                (<td>\n                <button onClick={()=>viewAuction(auctionAddress)}>View Auction</button>\n                </td>):\n                ( <td>\n                <button onClick={()=>startAuction(address)}>Start Auction</button>\n                </td>)\n            }\n            <td><button onClick={()=>sellAsset(address)}>Sell Asset</button></td>\n        </tr>);\n    });\n    return (\n        <div className={'w-90 bg-white shadow-5 br-m mt-3'}>\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th>Auction ID</th>\n                    <th>Owner Entity</th>\n                    <th>Asset On Auction</th>\n                    <th>City</th>\n                    <th>Date</th>\n                    <th>Reserve Price</th>\n                    <th>EMD</th>\n                    <th>Bid Multiplier</th>\n                    <th>Event Type</th>\n                    <th>Asset Contract Address</th>\n                    <th>Auction Status</th>\n                    <th>Sell</th>\n                </tr>\n                </thead>\n                <tbody>\n                {rows}\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Cover from \"./Cover/Cover\";\nimport obj from './obj';\nimport {AuctionResult} from \"./AuctionResult/AuctionResult\";\n\nexport const Auction = ({filter,onSearchChange, routeChange,auctions, startAuction, viewAuction, sellAsset}) =>(\n    <div className=\"App \">\n        <Particles params={obj} className={\"particlesBg \"}/>\n        <Cover handleChange={onSearchChange} name={\"Auction\"} routeChange={routeChange}/>\n        <AuctionResult npa={filter} auctions={auctions} startAuction={startAuction} viewAuction={viewAuction} sellAsset={sellAsset}/>\n    </div>\n)","\r\nconst obj =\r\n    {\r\n        particles: {\r\n            number: {\r\n                value: 128,\r\n                density: {\r\n                    enable: true,\r\n                    value_area: 1000\r\n                }\r\n            },\r\n            color: {\r\n                value: \"#ffffff\"\r\n            },\r\n            shape: {\r\n                type: \"circle\",\r\n                stroke: {\r\n                    width: 0,\r\n                    color: \"#000000\"\r\n                },\r\n                polygon: {\r\n                    nb_sides: 3\r\n                },\r\n                image: {\r\n                    src: \"img/github.svg\",\r\n                    width: 100,\r\n                    height: 100\r\n                }\r\n            },\r\n            opacity: {\r\n                value: 1,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 1,\r\n                    opacity_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            line_linked: {\r\n                enable: true,\r\n                distance: 150,\r\n                color: \"#ffffff\",\r\n                opacity: 0.4,\r\n                width: 1\r\n            },\r\n            move: {\r\n                enable: true,\r\n                speed: 2,\r\n                direction: \"none\",\r\n                random: true,\r\n                straight: false,\r\n                out_mode: \"out\",\r\n                bounce: false,\r\n                attract: {\r\n                    enable: false,\r\n                    rotateX: 600,\r\n                    rotateY: 1200\r\n                }\r\n            }\r\n        },\r\n        interactivity: {\r\n            detect_on: \"canvas\",\r\n            events: {\r\n                onhover: {\r\n                    enable: false,\r\n                    mode: \"bubble\"\r\n                },\r\n                onclick: {\r\n                    enable: true,\r\n                    mode: \"repulse\"\r\n                },\r\n                resize: true\r\n            },\r\n            modes: {\r\n                grab: {\r\n                    distance: 400,\r\n                    line_linked: {\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                bubble: {\r\n                    distance: 100,\r\n                    size: 20,\r\n                    duration: 2,\r\n                    opacity: 8,\r\n                    speed: 3\r\n                },\r\n                repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4\r\n                },\r\n                push: {\r\n                    particles_nb: 4\r\n                },\r\n                remove: {\r\n                    particles_nb: 2\r\n                }\r\n            }\r\n        },\r\n        retina_detect: true\r\n    };\r\n\r\nexport default obj;","import React from 'react';\r\n\r\nconst NavigationBar = ({routeChange}) => (\r\n    <nav className=\"pa3 pa4-ns\">\r\n        <div className=\"tc bg-white shadow-5 br-pill\">\r\n            <h5 className={\"link dim gray f6 f5-ns dib mr3 no-underline pointer\"} title={\"Home\"} onClick={()=>routeChange(\"homepage\")}>Home Page</h5>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default NavigationBar","import React from \"react\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nconst SearchField = ({handleChange, routeChange}) => (\r\n    <div className={\"pb3\"}>\r\n        <NavigationBar className={''} routeChange={routeChange}/>\r\n        <input className={\"search br-pill shadow-5\"} type={\"search\"} name={'searchField'} placeholder={\"Search NPA\"} onChange={handleChange}/>\r\n    </div>\r\n);\r\n\r\nexport default SearchField;","import React from 'react';\r\nconst Title = ({name}) => (\r\n    <header className=\"tc ph4\">\r\n        <p className=\"link dim black b f1 tc db mb1 mb4-ns no-underline pointer\" title={\"Home\"}>\r\n            {name}\r\n        </p>\r\n    </header>\r\n);\r\n\r\nexport default Title;","import React from 'react';\r\nimport Title from \"./Title\";\r\n\r\nconst Header = ({name}) => (\r\n    <div className={\"header\"}>\r\n        <Title name={name}/>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\nimport SearchField from \"./Components/SearchField\";\nimport Header from \"./Components/Header\";\n\nconst Cover = ({handleChange,name,routeChange}) =>{\n\n    return (\n        <div>\n            <Header name={name}/>\n            <SearchField  handleChange={handleChange} routeChange={routeChange}/>\n        </div>\n    )\n}\n\nexport default Cover;","import React, {Component} from \"react\";\n\nexport class Portal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bidAmount: 0,\n            isLoaded: false,\n            myBid:0,\n            highestBid: 0,\n            highestBidder: '',\n            isActive: false,\n            bidLog:[]\n        }\n    }\n\n    componentDidMount = async () => {\n        try{\n            this.loggedInAccount = await window.ethereum.enable();\n            this.props.auctionInterface.options.address=this.props.auctionAddress;\n            await this.getAssetDetails();\n            console.log(this.props.auctionInterface);\n            if(!(await this.getStatus())) {\n                await this.startBidding();\n            }\n            await this.getMybid();    //haven't tested this function\n            this.listenToStart();\n            this.listenToBid()\n            this.listenToBidWithdraw()\n            this.listenToSetOwner();\n            this.listenToOwnerChange();\n            this.listenToAuctionCancel();\n            this.listenToAuctionEnd();\n            this.setState({isLoaded: true},this.getHighestBid);\n            console.log(this.owneraddress,this.assetAddress)\n        }catch (e) {\n            console.log(e);\n        }\n    }\n\n    // haven't tested yet\n    getMybid =async () =>{\n        const response = await this.props.auctionInterface.methods.getMyBid().call();\n        this.setState({\n            myBid:response,\n        })\n    }\n\n    getStatus = async () =>{\n        try {\n            return await this.props.auctionInterface.methods.ping().call()\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    sendBid = () => {\n        this.props.auctionInterface.methods.bid().send({from: this.loggedInAccount[0], value: this.props.web3.utils.toWei(this.state.bidAmount,\"finney\")},(err,res)=>console.log(err,res)).then(res=>this.getMybid());  // haven't tested the last .then part\n        this.setState({bidAmount:0})\n    }\n\n    startBidding = async () =>{\n        try {\n            const tx = {\n                from: this.owneraddress,\n                to: this.props.auctionInterface.options.address,\n                data: this.props.auctionInterface.methods.startAuction().encodeABI()\n            }\n            console.log(tx, this.props.auctionInterface);\n            this.props.web3.eth.sendTransaction(tx, (err, result) => {\n                console.log(err, result);\n            }).then(res => console.log(res.logs));\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    getHighestBid = async () =>{\n        try {\n            const response = await this.props.auctionInterface.methods.getHighestBid().call();\n            const data = await Object.values(response);\n            this.setState({highestBidder: data[1], highestBid: this.props.web3.utils.fromWei(data[0], \"ether\")})\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    //  auctionStarted(address _auction, address _asset);\n    listenToStart = () =>{\n        this.props.auctionInterface.events.auctionStarted().on(\"data\",this.getHighestBid);\n    }\n\n    //  HighBidAlert(uint _bid, address _bidder);\n    listenToBid = () =>{\n        const data=this.state.bidLog;\n        this.props.auctionInterface.events.HighBidAlert().on(\"data\",this.getHighestBid).on(\"data\",async (evt)=>{\n            await this.getMybid();\n            console.log(evt);\n            if(data.length){\n                // console.log(data.toString().includes([evt.returnValues._bid,evt.returnValues._bidder].toString()))\n                let flag = false;\n                data.forEach(each=>{\n                    if(each.bid===evt.returnValues._bid && each.bidder===evt.returnValues._bidder){\n                        flag=true;\n                    }\n                })\n                if(!flag){\n                    data.push({bid:evt.returnValues._bid,bidder:evt.returnValues._bidder});\n                }\n            }else{\n                data.push({bid:evt.returnValues._bid,bidder:evt.returnValues._bidder});\n            }\n            this.setState({bidLog:data})\n            console.log(this.state.bidLog);\n        });\n        // this.props.auctionInterface.events.HighBidAlert().on(\"data\".this.getHighestBid);\n    }\n\n    getAssetDetails=async ()=>{\n        try {\n            this.owneraddress = await this.props.auctionInterface.methods.owner().call();\n            this.assetAddress = await this.props.auctionInterface.methods.getAssetOnAuction().call();\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    ownerCancelAuction = async () =>{\n        try {\n            await this.props.auctionInterface.methods.cancelAuction.send({from: this.owneraddress}, (err, res) => console.log(err, res)).then(res => console.log(res));\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    ownerEndAuction = async () =>{\n        try {\n            await this.props.auctionInterface.methods.endAuction().send({from: this.owneraddress}, (err, res) => console.log(err, res)).then(res => console.log(res));\n        }catch (e) {\n                console.log(\"An error occurred while processing.\")\n            }\n    }\n\n    ownerStopAuction = async () =>{\n        try {\n            await this.props.auctionInterface.methods.toggleStopAuction().send({from: this.owneraddress}, (err, res) => console.log(err, res)).then(res => {\n                console.log(res);\n                alert(\"Transfer \" + this.assetAddress + \" ownership to Highest Bidder\");\n            });\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    bidderWithdrawBid = async () =>{\n        try {\n            await this.props.auctionInterface.methods.withdrawBid().send({from: this.loggedInAccount[0]}, (err, res) => console.log(err, res)).then(res => console.log(res));\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    //  bidWithdrawn(uint _bid, address _bidder);\n    listenToBidWithdraw = () => {\n        const data=this.state.bidLog;\n        this.props.auctionInterface.events.bidWithdrawn().on(\"data\",(evt)=>{\n            console.log(evt);\n            if(data.length){\n                let flag = false;\n                data.forEach(each=>{\n                    if(each.bid===(-1)*evt.returnValues._bid && each.bidder===evt.returnValues._bidder){\n                        flag=true;\n                    }\n                })\n                if(!flag){\n                    data.push({bid:(-1)*evt.returnValues._bid,bidder:evt.returnValues._bidder});\n                }\n            }else{\n                data.push({bid:(-1)*evt.returnValues._bid,bidder:evt.returnValues._bidder});\n            }\n            this.setState({bidLog:data})\n            console.log(this.state.bidLog);\n        });\n    }\n\n    //  setOwner(address newOwner);\n    listenToSetOwner = () =>{\n        this.props.auctionInterface.events.setOwner().on(\"data\",(evt)=>{\n            alert(\"!!Auction Result!!\\nHighest Bidder= \"+evt.returnValues.newOwner+\"\\nOther Participants have been refunded their ethers. The owner need to transfer ownership of \"+this.assetAddress+\" to the Highest Bidder before they can receive the resulting amount. Thank You for Participating.\\nNever run out of Gas!\");\n        });\n    }\n\n    //  newOwner(address _new);\n    listenToOwnerChange = () =>{\n        this.props.auctionInterface.events.newOwner().on(\"data\",(evt)=>{\n            alert(\"!!Auction Result!!\\nHighest Bidder= \"+evt.returnValues._new+\"\\nOwnership Transferred \"+this.assetAddress+\" to the Highest Bidder and owner have received the resulting amount. Thank You for Participating. Never run out of Gas!\")\n        });\n    }\n\n    //  auctionCanceled(address _auction, address _asset);\n    listenToAuctionCancel = () =>{\n        this.props.auctionInterface.events.auctionCanceled().on(\"data\",(evt)=>{\n            alert(\"Auction have been cancelled by the owner. The funds have been refunded back to respective accounts. Sorry for the Gas!\");\n            alert(\"!!Warning!!\\n Any ether sent from now on might become entropy. So be aware! \\nNever run out of Gas!\");\n        });\n    }\n\n    //  auctionEnded(address _auction, address _asset);\n    listenToAuctionEnd = () =>{\n        this.props.auctionInterface.events.auctionEnded().on(\"data\",(evt)=>{\n            alert(\"Auction have Ended by the owner. The funds have been refunded back to respective accounts. Sorry for the Gas!\");\n            alert(\"!!Warning!!\\n Any ether sent from now on might become entropy. So be aware! \\nNever run out of Gas!\");\n        });\n    }\n\n    handleInputChange = (evt) =>{\n        const target=evt.target;\n        const value = target.type === \"checkbox\"? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n            [name]: value\n        })\n        console.log(this.state.bidAmount);\n    }\n\n    render() {\n        if (this.state.isLoaded) {\n            console.log(this.loggedInAccount[0]===this.owneraddress);\n            if (this.loggedInAccount[0].toLowerCase() === this.owneraddress.toLowerCase()) {\n                return (\n                    <div className={'w-90 bg-white shadow-5 br-m mt-3'}>\n                        Portal for interacting with auction\n                        <h1>Highest Bid :- {this.state.highestBid}</h1>\n                        <h1>HighestBidder :- {this.state.highestBidder}</h1>\n                        <button onClick={this.ownerCancelAuction}>Cancel Auction</button>\n                        <button onClick={this.ownerStopAuction}>Stop Auction</button>\n                        <button onClick={this.ownerEndAuction}>End Auction</button>\n                        <h1>Logs</h1>\n                        {this.state.bidLog.map(each => <p>Bid: {each.bid} wei Bidder: {each.bidder}</p>)}\n                    </div>\n                )\n            } else {\n                return (\n                    <div className={'w-90 bg-white shadow-5 br-m mt-3'}>\n                        Portal for interacting with auction\n                        <h1>Highest Bid :- {this.state.highestBid}</h1>\n                        <h1>HighestBidder :- {this.state.highestBidder}</h1>\n                        <h1>My Bid :- {this.state.myBid}</h1>  {/*  haven't tested this functionality yet  */}\n                        <h4>Enter your Bid Amount. Note:- Unit is finney. 1 ether = 1,000 finney</h4>\n                        <input name={'bidAmount'} onChange={this.handleInputChange}/>\n                        <button onClick={this.sendBid}>Bid</button>\n                        <button onClick={this.bidderWithdrawBid}>Withdraw Bid</button>\n                        <h1>Logs</h1>\n                        {this.state.bidLog.map(each => <p>Bid: {each.bid} wei Bidder: {each.bidder}</p>)}\n                    </div>\n                )\n            }\n        }\n        return (\n            <div>\n                Loading\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport obj from \"./obj\";\nimport Cover from \"./Cover/Cover\";\nimport {Portal} from \"./Portal/Portal\";\n\nexport const AuctionStatus = ({auctionAddress, onSearchChange, routeChange, auctionInterface,web3}) =>{\n    return (\n            <div className=\"App \">\n                <Particles params={obj} className={\"particlesBg \"}/>\n                <Cover handleChange={onSearchChange} name={\"Auction \"+auctionAddress}  routeChange={routeChange}/>\n                <Portal auctionInterface={auctionInterface} auctionAddress={auctionAddress} web3={web3}/>\n            </div>\n    )\n};","import React from 'react';\r\n\r\nconst NavigationBar = ({routeChange}) => (\r\n    <nav className=\"pa3 pa4-ns\">\r\n        <div className=\"tc bg-white shadow-5 br-pill\">\r\n            <h5 className={\"link dim gray f6 f5-ns dib mr3 no-underline pointer\"} title={\"Home\"} onClick={()=>routeChange(\"auction\")}>Auction</h5>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default NavigationBar","import React from \"react\";\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nconst SearchField = ({handleChange, routeChange}) => (\r\n    <div className={\"pb3\"}>\r\n        <NavigationBar className={''} routeChange={routeChange}/>\r\n        <input className={\"search br-pill shadow-5\"} type={\"search\"} name={'searchField'} placeholder={\"Search NPA\"} onChange={handleChange}/>\r\n    </div>\r\n);\r\n\r\nexport default SearchField;","import React from 'react';\r\n\r\nconst Title = ({name}) => (\r\n    <header className=\"tc ph4\">\r\n        <p className=\"link dim black b f1 tc db mb1 mb4-ns no-underline pointer\" title={\"Home\"}>\r\n            {name}\r\n        </p>\r\n    </header>\r\n);\r\n\r\nexport default Title;","import React from 'react';\r\nimport Title from \"./Title\";\r\n\r\nconst Header = ({name}) => (\r\n    <div className={\"header\"}>\r\n        <Title name={name}/>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\nimport SearchField from \"./Components/SearchField\";\nimport Header from \"./Components/Header\";\n\nconst Cover = ({handleChange,name,routeChange}) =>{\n\n    return (\n        <div>\n            <Header name={name}/>\n            <SearchField  handleChange={handleChange} routeChange={routeChange}/>\n        </div>\n    )\n}\n\nexport default Cover;","\r\nconst obj =\r\n    {\r\n        particles: {\r\n            number: {\r\n                value: 128,\r\n                density: {\r\n                    enable: true,\r\n                    value_area: 1000\r\n                }\r\n            },\r\n            color: {\r\n                value: \"#ffffff\"\r\n            },\r\n            shape: {\r\n                type: \"circle\",\r\n                stroke: {\r\n                    width: 0,\r\n                    color: \"#000000\"\r\n                },\r\n                polygon: {\r\n                    nb_sides: 3\r\n                },\r\n                image: {\r\n                    src: \"img/github.svg\",\r\n                    width: 100,\r\n                    height: 100\r\n                }\r\n            },\r\n            opacity: {\r\n                value: 1,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 1,\r\n                    opacity_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: {\r\n                    enable: false,\r\n                    speed: 40,\r\n                    size_min: 0.1,\r\n                    sync: false\r\n                }\r\n            },\r\n            line_linked: {\r\n                enable: true,\r\n                distance: 150,\r\n                color: \"#ffffff\",\r\n                opacity: 0.4,\r\n                width: 1\r\n            },\r\n            move: {\r\n                enable: true,\r\n                speed: 2,\r\n                direction: \"none\",\r\n                random: true,\r\n                straight: false,\r\n                out_mode: \"out\",\r\n                bounce: false,\r\n                attract: {\r\n                    enable: false,\r\n                    rotateX: 600,\r\n                    rotateY: 1200\r\n                }\r\n            }\r\n        },\r\n        interactivity: {\r\n            detect_on: \"canvas\",\r\n            events: {\r\n                onhover: {\r\n                    enable: false,\r\n                    mode: \"bubble\"\r\n                },\r\n                onclick: {\r\n                    enable: true,\r\n                    mode: \"repulse\"\r\n                },\r\n                resize: true\r\n            },\r\n            modes: {\r\n                grab: {\r\n                    distance: 400,\r\n                    line_linked: {\r\n                        opacity: 1\r\n                    }\r\n                },\r\n                bubble: {\r\n                    distance: 100,\r\n                    size: 20,\r\n                    duration: 2,\r\n                    opacity: 8,\r\n                    speed: 3\r\n                },\r\n                repulse: {\r\n                    distance: 200,\r\n                    duration: 0.4\r\n                },\r\n                push: {\r\n                    particles_nb: 4\r\n                },\r\n                remove: {\r\n                    particles_nb: 2\r\n                }\r\n            }\r\n        },\r\n        retina_detect: true\r\n    };\r\n\r\nexport default obj;","import React, {Component} from \"react\";\n\nexport default class Portal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            input: '',\n            currentOwner:'',\n            newOwner:'',\n            contractBalance: 0,\n            assetDetails: {},\n        }\n    }\n\n    componentDidMount = async () => {\n        try{\n            this.props.assetInterface.options.address=this.props.assetAddress;\n            console.log(this.props.assetInterface);\n            await this.getAllInitialData();\n            this.listenToEvents();\n            this.setState({\n                isLoaded: true,\n            })\n        }catch (e) {\n            alert(\"Failed to Load\");\n        }\n    }\n\n    getCurrentOwner = async () =>{ //Working   ----   sets currentOwner in State to current Asset Owner\n        try {\n            const response = await this.props.assetInterface.methods.owner().call();\n            this.setState({\n                currentOwner: response,\n            });\n            console.log(\"inside getCurrentOwner\", this.state);\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    getContractBalance = async () =>{  //Working     ----- set contract balance in state from asset contract\n        try {\n            const response = await this.props.assetInterface.methods.getBalance().call();\n            this.setState({\n                contractBalance: response,\n            });\n            console.log(\"inside getContractBalance\", this.state);\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    getNpaDetails = async () =>{  //Working   ----   sets contract details in state from asset contract\n        try {\n            const {_NPA_ID, _assetOnAuction, _bankName, _city} = await this.props.assetInterface.methods.getNPADetails().call();\n            this.setState({\n                assetDetails: {\n                    _NPA_ID, _assetOnAuction, _bankName, _city\n                }\n            });\n        }catch (e) {\n            console.log(\"An error occurred while processing.\",e)\n        }\n\n    }\n\n    getNewOwner = async () =>{ //Working   ----   sets newOwner in State to current Asset Owner\n        try {\n            const response = await this.props.assetInterface.methods.getNewOwner().call();\n            this.setState({\n                newOwner: response,\n            });\n            console.log(\"inside getNewOwner\", this.state);\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    setNewOwner = async (address) =>{ //Working    -----  set newOwner in Asset Contract\n        try {\n            await this.props.assetInterface.methods.setNewOwner(address).send({from: this.state.currentOwner}).then(res => {\n                this.getNewOwner();\n            });\n            this.setState({input: ''})\n            console.log(\"inside setNewOwner\", this.state);\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    transferOwnership = async () =>{  //Working    -----    transfer asset contract ownership from previous owner to new owner\n        try {\n            await this.props.assetInterface.methods.transferOwnership().send({from: this.state.currentOwner}).then(res => {\n                this.getCurrentOwner();\n                this.getNewOwner();\n                this.getContractBalance();\n                console.log(res);\n            })\n            console.log(\"inside transferOwnership\", this.state);\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    getAllInitialData = async () =>{\n        try {\n            await this.getCurrentOwner();\n            await this.getNewOwner();\n            await this.getContractBalance();\n            await this.getNpaDetails();\n        }catch (e) {\n            console.log(\"An error occurred while processing.\")\n        }\n    }\n\n    listenToEvents = () => {\n        this.props.assetInterface.events.newOwnerAssigned().on(\"data\",(evt)=>{\n            alert(\"New ownership assigned to \"+evt.returnValues._newOwner+\". \\nPlease Transfer the exact amount!\");\n        });\n        this.props.assetInterface.events.OwnershipTransferred().on(\"data\",(evt)=>{\n            alert(\"The Ownership have been successfully transferred from \"+evt.returnValues.previousOwner+\" to \"+evt.returnValues.newOwner+\".\\n Never run out of Gas!\")\n        })\n    }\n\n    handleInputChange = (evt) =>{\n        const target = evt.target;\n        const value = target.type==='checkbox'?target.checked:target.value;\n        const name = target.name;\n        this.setState({\n            [name]:value,\n        })\n        console.log(\"inside handleInputChange\",this.state);\n    }\n\n    render() {\n        if(this.state.isLoaded){\n            return (\n                <div className={'w-60 bg-white shadow-5 br-m mt-3'}>\n                <h1>Welcome to Asset Sale</h1>\n                <p>NPA ID :- {this.state.assetDetails._NPA_ID}</p>\n                <p>Asset Details :- {this.state.assetDetails._assetOnAuction}</p>\n                <p>Owner Entity :- {this.state.assetDetails._bankName}</p>\n                <p>City :- {this.state.assetDetails._city}</p>\n                    <p>Current Owner Address :-  {this.state.currentOwner}</p>\n                    <p>New Owner Address :-  {this.state.newOwner}</p>\n                    <div>\n                        <input onChange={this.handleInputChange} name={\"input\"} value={this.state.input}/>\n                        <button onClick={()=>this.setNewOwner(this.state.input)}>Test Button for setNewOwner()</button>\n                    </div>\n                    <button onClick={this.transferOwnership}>Test Button for transferOwnership()</button>\n                 </div>\n            )\n        }\n        else {\n            return (\n                <div className={'w-60 bg-white shadow-5 br-m mt-3'}>\n                    Couldn't Load\n                </div>\n            )\n        }\n    }\n\n}","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Cover from \"./Cover/Cover\";\nimport obj from './obj';\nimport Portal from \"./Portal/Portal\";\n\nexport const BiSell = ({onSearchChange,routeChange,assetAddress, assetInterface, web3}) =>(\n    <div className=\"App \">\n        <Particles params={obj} className={\"particlesBg \"}/>\n        <Cover handleChange={onSearchChange} name={\"Sale of \"+assetAddress} routeChange={routeChange}/>\n        <Portal assetInterface={assetInterface} assetAddress={assetAddress} web3={web3}/>\n    </div>\n)","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport AssetInterfaceContract from \"./contracts/AssetInterface.json\";\nimport AuctionContract from \"./contracts/Auction.json\";\nimport AuctionManagerContract from './contracts/AuctionManager.json';\nimport {changeSearchField} from \"./actions\";\nimport getWeb3 from \"./getWeb3\";\nimport {HomePage} from \"./Containers/HomePage/HomePage\";\nimport {Auction} from \"./Containers/Auction/Auction\";\nimport {AuctionStatus} from \"./Containers/AuctionStatus/AuctionStatus\";\nimport {BiSell} from \"./Containers/BiSell/BiSell\";\n\nconst mapStateToProps = (state) => ({\n    searchField: state.searchField,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onSearchChange: (event) => dispatch(changeSearchField(event.target.value)),\n})\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state= {\n            isLoaded: false,\n            npa: [],\n            contracts: [],\n            route: \"homepage\",\n            auctionManager: '',\n            openAuction: '',\n            openSale: '',\n            auctions: [],\n            AuctionInstance: {}\n        }\n    }\n\n    componentDidMount = async () => {\n        try {\n            this.web3 = await getWeb3();\n            this.web3.eth.handleRevert = true;\n\n            this.accounts = await this.web3.eth.getAccounts();\n\n            this.networkId = await this.web3.eth.net.getId();\n\n            this.assetInterface = new this.web3.eth.Contract(\n                AssetInterfaceContract.abi,\n                AssetInterfaceContract.networks[this.networkId] && AssetInterfaceContract.networks[this.networkId].address,\n            );\n\n            this.auction = new this.web3.eth.Contract(\n                AuctionContract.abi,\n                AuctionContract.networks[this.networkId] && AuctionContract.networks[this.networkId].address,\n            );\n\n            this.auctionManager = new this.web3.eth.Contract(\n                AuctionManagerContract.abi,\n                AuctionManagerContract.networks[this.networkId] && AuctionManagerContract.networks[this.networkId].address,\n            );\n            this.auctionManager.options.address = await this.fetchAuctionManagerAddress();\n\n            this.fetchAddress().then(res=>{this.feed();this.auctionStatus();});\n            this.setState({isLoaded: true, AuctionInstance:this.auction});\n        } catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n                `Failed to load`,\n            );\n            console.error(error);\n        }\n    };\n\n    fetchAuctionManagerAddress = async() =>{\n        try{\n            const response = await fetch(\"https://blooming-retreat-49988.herokuapp.com/getAuctionManager/\");\n            return await response.json();\n        }catch (e) {\n            console.log(\"Couldn't fetch data from Server\");\n        }\n    }\n\n    feed =  () => {\n        this.state.contracts.forEach(async element=>{\n            const array = this.state.npa;\n            await this.feedDataToState(element.address).then(res=>{\n                if(res.flag){\n                    array.push(res.Data);\n                }else{\n                    alert(res.Data)\n                }\n            })\n            this.setState({npa:array});\n        })\n    }\n\n    feedDataToState = async (_address) => {\n        try {\n            const response = await fetch(\"https://blooming-retreat-49988.herokuapp.com/fetchData\", {\n                method: 'post',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    address: _address\n                })\n            });\n            return await response.json()\n        }catch (e) {\n            console.log(\"Couldn't fetch data from server\");\n        }\n    }\n\n    fetchAddress = async () =>{\n        try {\n            const response = await fetch('https://blooming-retreat-49988.herokuapp.com/getAddress');\n            const data = await response.json();\n            this.setState({\n                contracts: data\n            });\n        }catch (e) {\n            console.log(\"Couldn't fetch data from Server\")\n        }\n    }\n\n    viewAuction = (address) =>{\n        this.setState({openAuction: address});\n        this.changeRoute(\"viewAuction\");\n        console.log(this.auction,this.state);\n    }\n\n    startAuction = async (address) => {\n        try {\n            const auctionManagerAddress = this.auctionManager.options.address;\n            console.log(auctionManagerAddress, this.accounts);\n            const auctionInstance = await this.auction.deploy({\n                data: AuctionContract.bytecode,\n                arguments: [address, auctionManagerAddress]\n            }).send({\n                from: this.accounts[0],\n                gas: 2000000,\n                gasPrice: '20000000000'\n            }, (err, result) => console.log(err, result))\n            this.viewAuction(auctionInstance.options.address);\n            this.setState({AuctionInstance: auctionInstance});\n            console.log(this.state);\n        }catch (e) {\n            console.log(\"An error occurred while processing\")\n        }\n    };\n\n    auctionStatus = () =>{\n        console.log(this.auctionManager);\n        const contract = this.state.contracts;\n        console.log(contract,this.state.auctions);\n        if(contract.length===0){\n            console.log(\"Empty\");\n        }else{\n            let i =0;\n            contract.forEach(async({address})=>{\n                try {\n                    const data = this.state.auctions;\n                    const {auction, status} = await this.auctionManager.methods.getAuctionStatus(address).call();\n                    if (data.length === 0) {\n                        data.push({address, auction, status});\n                    } else {\n                        let index = 0;\n                        const flag = data.some((each, i) => {\n                            index = i;\n                            return address === each.address;\n                        })\n                        console.log(index);\n                        if (flag) {\n                            data[index].auction = auction;\n                            data[index].status = status;\n                        } else {\n                            data.push({address, auction, status});\n                        }\n                    }\n                    this.setState({auctions: data});\n                    i++;\n                }catch (e) {\n                    console.log(\"An error occurred while processing\",e)\n                }\n            })\n        }\n        console.log(this.state.auctions);\n    }\n\n    sellAsset = (address) =>{\n        this.changeRoute(\"sell\");\n        this.setState({openSale:address});\n    }\n\n    changeRoute = (_route) => {\n        this.setState({route:_route})\n    }\n\n    filterNpa = (npa,searchField) =>{\n        let filter = npa;\n        if(npa.length!==0){\n            filter = npa.filter(each=>{\n                return Object.values(each).toString().toLowerCase().includes(searchField.toLowerCase());\n            })\n        }\n        return filter;\n    }\n\n  render() {\n        const filter = this.filterNpa(this.state.npa,this.props.searchField);\n    if(this.state.isLoaded){\n        switch (this.state.route){\n            case \"auction\":\n                return (\n                    <Auction sellAsset={this.sellAsset} viewAuction={this.viewAuction} startAuction={this.startAuction} routeChange={this.changeRoute} filter={filter}  auctions={this.state.auctions}/>\n                )\n            case \"homepage\":\n                return (\n                    <HomePage filter={filter} onSearchChange={this.props.onSearchChange} routeChange={this.changeRoute} />\n                )\n            case \"viewAuction\":\n                return(\n                    <AuctionStatus auctionAddress={this.state.openAuction} routeChange={this.changeRoute} auctionInterface={this.state.AuctionInstance} web3={this.web3}/>\n                )\n            case \"sell\":\n                return(\n                    <BiSell assetAddress={this.state.openSale} routeChange={this.changeRoute} assetInterface={this.assetInterface} web3={this.web3}/>\n                )\n        }\n      }else{\n          return <div>Loading </div>;\n      }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {CHANGE_SEARCH_FIELD,\n    FETCH_NPA_PENDING, FETCH_NPA_SUCCESS, FETCH_NPA_FAILED} from './constants.js';\n\nconst changeSearchField = (value) =>(\n    {\n        type: CHANGE_SEARCH_FIELD,\n        payload: value\n    }\n);\n\nconst fetchNpa = () => async (dispatch) => {\n    dispatch({\n        type: FETCH_NPA_PENDING\n    });\n    try{\n        const response = await fetch('http://localhost:3001/getAddress');\n        const data = await response.json();\n        dispatch({\n            type: FETCH_NPA_SUCCESS,\n            payload: data\n        })\n    }catch (e) {\n        dispatch({\n            type: FETCH_NPA_FAILED,\n            payload: e\n        })\n    }\n}\n\nexport {changeSearchField};","const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nconst FETCH_NPA_PENDING = 'FETCH_NPA_PENDING';\nconst FETCH_NPA_SUCCESS = 'FETCH_NPA_SUCCESS';\nconst FETCH_NPA_FAILED = 'FETCH_NPA_FAILED';\n\nconst FETCH_ADDRESS_PENDING = 'FETCH_ADDRESS_PENDING';\nconst FETCH_ADDRESS_SUCCESS = 'FETCH_ADDRESS_SUCCESS';\nconst FETCH_ADDRESS_FAILED = 'FETCH_ADDRESS_FAILED';\n\nexport {CHANGE_SEARCH_FIELD,\n    FETCH_NPA_PENDING, FETCH_NPA_SUCCESS, FETCH_NPA_FAILED,\n    FETCH_ADDRESS_PENDING, FETCH_ADDRESS_SUCCESS, FETCH_ADDRESS_FAILED\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {CHANGE_SEARCH_FIELD,\n    FETCH_NPA_PENDING, FETCH_NPA_SUCCESS, FETCH_NPA_FAILED} from './constants.js';\nimport {changeSearchField} from \"./actions\";\n\nconst initialSearchState = {\n    searchField: ''\n}\n\nconst searchNpa = (state=initialSearchState,action)=> {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({},state,{searchField: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialNpaState = {\n    contracts: [],\n}\n\nconst fetchNpa = (state=initialNpaState, action) =>{\n    switch (action.type) {\n        case FETCH_NPA_PENDING:\n            return {...state};\n        case FETCH_NPA_SUCCESS:\n            return {...state,contracts: action.payload};\n        case FETCH_NPA_FAILED:\n            return {...state, error: action.payload};\n        default:\n            return state;\n    }\n}\n\nexport {searchNpa};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {createStore} from 'redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'\nimport {searchNpa} from './reducers';\n\nconst rootStore = createStore(searchNpa);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={rootStore}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}